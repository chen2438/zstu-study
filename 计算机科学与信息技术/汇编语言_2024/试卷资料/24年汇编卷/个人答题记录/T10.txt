
data segment
    x db 0
    y db 0
    z db 0
    w db 0
code segment
main proc
    ; 初始化数据段
    mov ax, @data
    mov ds, ax

    ; 读取x
    call readInt
    mov x, al
    call crlf

    ; 读取y
    call readInt
    mov y, al
    call crlf
    
    ; 读取z
    call readInt
    mov z, al
    call crlf
    ; 计算w = x + y + 24 - z
    mov al, x
    add al, y
    add al, 24
    sub al, z
    mov w, al

    ; 输出w
    mov bl, w
    call writeInt

    ; 结束程序
    mov ax, 4C00h
    int 21h
main endp

; 读取无符号整数到AL
readInt proc
    ; 读取字符
    mov ah, 01h
    int 21h
    ; 转换字符到整数
    sub al, '0'
    ret
readInt endp

; 子过程 writeInt，把寄存器 BL 的值以十进制无符号整数的格式输出到显示器
writeInt proc
    mov ax, 0             ; 清空 AX
    mov al, bl            ; 将 BL 的值移动到 AL
    mov cx, 10            ; 设置除数为 10
    mov bx, 0             ; 初始化 BX 为 0
    mov dx, 0             ; 初始化 DX 为 0

write_loop:
    xor dx, dx            ; 清空 DX
    div cx                ; AX / 10，商在 AX，余数在 DX
    push dx               ; 将余数压入堆栈
    inc bx                ; 计数器加 1
    test ax, ax           ; 检查 AX 是否为 0
    jnz write_loop        ; 如果 AX 不为 0，继续循环

print_digits:
    pop dx                ; 从堆栈中弹出余数
    add dl, '0'           ; 转换数字到字符
    mov ah, 02h           ; BIOS 中断服务，显示字符
    int 21h
    dec bx                ; 计数器减 1
    jnz print_digits      ; 如果计数器不为 0，继续循环

    ret
writeInt endp

crlf    proc
        
        mov dl,0dh  ;回车ASCII码0dh赋值给dl
        mov ah,2
        int 21h     ;调用int21h 2号功能，显示dl
        
        mov dl,0ah  ;换行ASCII码0ah赋值给dl
        mov ah,2
        int 21h     ;调用int21h 2号功能，显示dl
        ret
crlf endp

end main